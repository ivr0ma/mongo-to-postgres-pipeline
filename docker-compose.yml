version: '3.8'

x-db-env: &db-env
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_HOST: ${POSTGRES_HOST}
  POSTGRES_PORT: ${POSTGRES_PORT}

x-mysql-env: &mysql-env
  MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  MYSQL_USER: ${MYSQL_USER}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  MYSQL_DATABASE: ${MYSQL_DATABASE}

services:
  db:
    build: ./db
    container_name: project_db
    environment:
      <<: *db-env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/config/postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
    networks:
      - app-network
  
  mysql:
    build: ./mysql
    container_name: project_mysql
    environment:
      <<: *mysql-env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      retries: 5

  data_generator:
    build: ./data_generator
    container_name: data_generator
    depends_on:
      db:
        condition: service_healthy
    environment:
      <<: *db-env
    networks:
      - app-network

volumes:
  db_data:
  mysql_data:

networks:
  app-network:
    driver: bridge
